pipeline {
    agent any

    environment {
        EC2_IP = '43.202.61.150'
        DOCKER_IMAGE_NAME = 'kyeungtak/fitpt'
        DOCKER_IMAGE_TAG = "${BUILD_NUMBER}"
    }

    stages {
        stage('Checkout master') {
            steps {
                git branch: 'master', url: 'https://lab.ssafy.com/s12-final/S12P31S208.git', credentialsId: 'SSAFY_GITLAB'
            }
        }

        stage('Prepare Secrets') {
            steps {
                withCredentials([
                    file(credentialsId: 'APP_APPLICATION_YAML', variable: 'APP_APPLICATION_YAML'),
                    file(credentialsId: 'APP_APPLICATION_LOCAL_YAML_FILE', variable: 'APP_APPLICATION_LOCAL_YAML_FILE'),
                    file(credentialsId: 'FIREBASE_SERVICE_KEY', variable: 'FIREBASE_SERVICE_KEY'),
                    file(credentialsId: 'FITPT_APP_DOCKERFILE', variable: 'FITPT_APP_DOCKERFILE')
                ]) {
                    sh """
                        chmod -R u+w backend/FitPt
                        cp ${FITPT_APP_DOCKERFILE} backend/FitPt/Dockerfile
                        cp ${FIREBASE_SERVICE_KEY} backend/FitPt/firebase/firebase_service_key.json
                        cp ${APP_APPLICATION_YAML} backend/FitPt/src/main/resources/application.yaml
                        cp ${APP_APPLICATION_LOCAL_YAML_FILE} backend/FitPt/src/main/resources/application-local.yaml
                    """
                }
            }
        }

        stage('Build JAR after yaml override') {
            steps {
                dir('backend/FitPt') {
                    sh """
                        chmod +x gradlew
                        ./gradlew clean build -x test
                    """
                }
            }
        }
        
        stage('Build & Push Docker Image') {
            steps {
                withCredentials([
                    usernamePassword(credentialsId: 'fitpt-dockerhub', usernameVariable: 'DOCKERHUB_USERNAME', passwordVariable: 'DOCKERHUB_PASSWORD')
                ]) {
                    dir('backend/FitPt') {
                        sh """
                            docker build -t ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} .
                            docker tag ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG} ${DOCKER_IMAGE_NAME}:latest
        
                            echo ${DOCKERHUB_PASSWORD} | docker login -u ${DOCKERHUB_USERNAME} --password-stdin
                            docker push ${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}
                            docker push ${DOCKER_IMAGE_NAME}:latest
                        """
                    }
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                sshagent(['SSH_KEY']) {
                    sh """
                        ssh -o StrictHostKeyChecking=no ubuntu@${EC2_IP} '
                            docker pull ${DOCKER_IMAGE_NAME}:latest

                            docker stop fitpt-app || true
                            docker rm fitpt-app || true

                            docker run -d --name fitpt-app --network fitpt-net -p 9090:9090 ${DOCKER_IMAGE_NAME}:latest
                        '
                    """
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment Success!'
        }
        failure {
            echo 'Deployment Failed!'
        }
    }
}
